# Release new version to NPM when Pull requests are merged
name: Release

on:
  push:
    branches:
      - master
      - develop

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      # yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v3.0.4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: install dependencies
        run: yarn --frozen-lockfile

      - name: Get date
        id: date
        run: |
          echo "::set-output name=date::$(date +%Y-%m-%d_%H-%M-%S)"

      - name: Create Release Pull Request & npm publish
        uses: changesets/action@v1
        id: changesets
        with:
          publish: yarn build-release-new
          commit: 'chore: entering prerelease mode'
          title: ':rocket: Release ${{ steps.date.outputs.date }} :rocket:'
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create git tags
        run: |
          echo 'steps.changesets.outputs.published - ${{ steps.changesets.outputs.published }}'
          echo 'steps.changesets.outputs.publishedPackages - ${{ steps.changesets.outputs.publishedPackages }}'
#         git tag -a v${{ env.version }} -m ":rocket: Release ${{ steps.date.outputs.date }} :rocket:"
#         git push origin v${{ env.version }}



